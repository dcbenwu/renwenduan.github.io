---
layout:     post
title:      "jq实现的几个动态效果详解"
subtitle:   "使用jQuery实现的菜单折叠(list.slide-up),固定位置模块(Fix module),回归顶部按钮(Back to top),手风琴效果(Accordion effect),幻灯效果(Slideshow effect)"
date:       2017-4-17
author:     "Duanrw"
header-img: "img/post-bg-js-module.jpg"
catalog: true
header-mask: 0.3
tags:
    - 前端开发
    - JavaScript
    - jQuery
---
> These affects are very common in the webpage,but how do them worked?
> This passage will show an Example and analysis

---

## Category
---

### 列表折叠效果
#### 原理过程分析
List slide-up is a vary basic effect on webpage. such as you you can open a list without a open a new page and the list will close very smoothly  when your mouse is leave the list category or click the category again.
首先,我们来先搞清楚他的原理,在网页中的菜单折叠其实是jq中的**slide-up** 效果并且我们每次只允许打开一个列表父元素,就像这样!

![](https://ws1.sinaimg.cn/large/b3c7bdb6ly1fhnsapgbw0g207k0adwi9.gif)

你需要了解**节点** 的概念,以及节点操作中的**siblings()** 和**.children()** 其他的操作可以看这里[Javascript&jQuery-4.4.3](http://pan.baidu.com/s/1nuEp2bv),这里我们只了解这几个小功能的的用法.
slideup 对应的是 slidedown 可以是列表展开或者折叠,就上上图演示的一样,另外是siblings() 是指选中元素的兄弟元素也就是当前元素同级的反选,children是指当前元素的子元素也就是选中包裹的东西,说这些是不是太基础了😆.
它的原理是什么呢? **其实就是点击的时候选中的元素执行slidedown操作,它的siblings执行slideup操作.**  另外插一句如果想只用一个方法来实现折叠展开效果可使用**slideToggle()** ,这个updown的结合,也即是改变当前的状态,如果你是折叠就展开反之则折叠.
还可以直接使用**addClass()** 方法来操作,简单吧!
下面就直接上代码吧!
#### 代码示例

```

/*HTML部分*/
<body>
  	<ul class="menu">
  		<li>
  			<a href="#" class="level1">水果</a>
  			<ul class="current">
  				<li><a href="#">苹果</a></li>
  				<li><a href="#">梨子</a></li>
  				<li><a href="#">葡萄</a></li>
  				<li><a href="#">火龙果</a></li>
  			</ul>
  		</li>
  		<li>
  			<a href="#" class="level1">海鲜</a>
  			<ul class="current">
  				<li><a href="#">蛏子</a></li>
  				<li><a href="#">扇贝</a></li>
  				<li><a href="#">龙虾</a></li>
  				<li><a href="#">象拔蚌</a></li>
  			</ul>
  		</li>
  	</ul>
</body>
/css部分*/
<style type="text/css">
		body{
			font-family:'Microsoft Yahei';
		}
		body,ul{
			margin:0px;
			padding:0px;
		}

		ul{list-style:none;}


		.menu{
			width:200px;
			margin:20px auto 0;
		}

		.menu .level1,.menu li ul a{
			display:block;
			width:200px;
			height:30px;
			line-height:30px;
			text-decoration:none;
			background-color:#3366cc;
			color:#fff;
			font-size:16px;
			text-indent:10px;			
		}

		.menu .level1{
			border-bottom:1px solid #afc6f6;

		}

		.menu li ul a{
			font-size:14px;
			text-indent:20px;
			background-color:#7aa1ef;

		}

		.menu li ul li{
			border-bottom:1px solid #afc6f6;
		}



		.menu li ul{
			display:none;
		}

		.menu li ul.current{
			display:block;
		}

		.menu li ul li a:hover{
			background-color:#f6b544;
		}

```

下面我们来使用jq来进行折叠菜单的操作:
导入文件我就不写了,首先创建ready
```
<script src="js/jquery-1.12.4.min.js"></script>
<script type="text/javascript">
    $(function(){     // 创建ready
       $('.level1').click(function(){  //选中要操作的对象,定义执行点击操作后的函数
          $(this).next().stop().slideToggle().parent().siblings().children('ul').slideUp();
          /*选中上面点击的元素块.消除多次点击效果只保留最后一次.执行当前折叠/展开的相反的操作.它的父级元素.的兄弟元素.的子元素(选中ul).执行slideup操作*/
       })
    })
</script>
```
这是第一种方法我们开始演示第二种addClass()方法:
```
$(function(){
  $('.level1').click(function(){
    $(this).next().stop().addClass('current').parent().siblings().children('ul').removeClass('current')
    })
  })
  /*这个效果没有过度的效果但是一样实现了折叠和展开,addClass是给元素增加类,而removeClass是给选中的元素移除类*/
```
---

### 固定模块效果
固定模块是很多网页中常见的,比如你往下拉网页的时候会发现有些模块是不会动的,如下图:

![](https://ws1.sinaimg.cn/large/b3c7bdb6ly1fho9kh6woeg20hz07iqfp.gif)

#### 原理过程分析
可以这样理解这个效果: **我们在往下拉滚动条的时候,当我们拉到某一个特定的位置(比如图中的这个模块的位置)的时候触发了一个匿名函数,这个函数的功能是让这个模块浮动并且有固定的top 和 left 值.** 这样就达到了固定模块的效果!
在这个过程中我们使用了一下几个方法

```

/*获取浏览器可视区宽度高度*/
$(window).height()
$(window).width()
/*获取元素相对页面的绝对位置*/
offset()
/*获取页面滚动距离 */
$(document).scrollTop()
$(document).scrollLeft()
/*页面滚动事件*/
$(window).scroll(function(){
	...
	})

```

#### 代码示例
HTML部分如下

```
<body>
  <div>
    <div class="top">
    </div>
    /*这个模块是占用位置的,当滑动结束时消失*/
    <div class="blank hidden"></div>  
    <div class="static">这个模块用来固定</div>
    <p>
      我是拉长作用的asfasf1
    </p>

    <p>
      我是拉长作用的p
    </p>
    <p>
      我是拉长作用的p
    </p>
    <p>
      我是拉长作用的p
    </p>
    <p>
      我是拉长作用的p
    </p>
    <p>
      我是拉长作用的p
    </p>
    <p>
      我是拉长作用的p
    </p>
    <p>
      我是拉长作用的p
    </p>
    <p>
      我是拉长作用的p
    </p>
    <p>
      我是拉长作用的p
    </p>
    <p>
      我是拉长作用的p
    </p>
    <p>
      我是拉长作用的p
    </p>

  </div>
</body>
```

css部分如下:

```

<style media="screen">
    p{
      clear: both;
      display: block;
      margin: 0 auto;
      text-align: center;
      height: 50px;
      font-size: 20px;

    }
    .static , .blank{
      height: 50px;
      width:800px;
      line-height: 50px;
      background: green;
      margin: auto;
    }
    .top{
      background: gray;
      width: 800px;
      margin: 0 auto;

    }
    .hidden{
      display: none;
    }
    </style>

```
js部分如下:

```
<script type="text/javascript">
    $(function(){
      $(window).scroll(function(){ //创建滚动事件
        var olen = $(document).scrollTop();
        if (olen > 0) { //这里使用的是要固定的模块的绝对位置
          $('.static').css({  //当滑动超过一定值时,则触发模块使用固定位置,不会随着页面移动而移动
          'top':0,
          'marginLeft':250,
          'position':'fixed'
        })
          $('.blank').removeClass('hidden')  // 让模块出现占位
        }
        else {
          $('.blank').addClass('hidden') //归为让模块消失
          $('.static').css({
            'top':'',
            'marginLeft':'',
            'position':''
          })
        }
      })
    })
    </script>

```
这样我们就实现了固定模块的效果,总结起来就是滚动到特定位置触发事件让模块固定在页面上返回时重新给模块定义css

---

### 返回顶部效果
#### 原理过程分析
这个和上面的效果类似,这里只做分析:
这个页面中应该存在一个固定位置的按钮这个按钮不会随着页面的滚动而改变位置,在未滚动之前这个按钮的状态是display:none
当页面滚动到某一特定位置时,触发事件{事件中包括removeClass :display:none,如果滚动的距离小于特定值则按钮消失}
如果点击了这个按钮,那么给页面的定位设置参数如下

```
$('.totop').click(function(){

    // 固定的兼容写法，滚动到顶部
    $('html,body').animate({'scrollTop':0});

})

```
这样我们就完成了回到顶部的操作!
---


### 手风琴效果效果
#### 原理过程分析
手风琴效果图如下

![](https://ws1.sinaimg.cn/large/b3c7bdb6ly1fhnwoti4rog20fs085du6.gif)

那么我们来分析下这个过程是如何实现的:
我们定义如下结构
```
div>ul>li*5>a+img
```
首先你要定义好一个刚能装下五个(这里是我举例子使用的五个标签具体多少看自己)标签以及图片的div,并且使用绝对定位来定位这几个li,这里有个 **坑** (就是关于relative,absolute,fixed 的用法:我的理解是:relative 是相对于模块本身原来的位置的偏移量,而absolute是相对于他的第一个祖辈(具有relative或者absolute或者fixed也就是不是默认的样式)的偏移量,而fixed是相对于整个可是窗口来说的!具体的可以谷歌搜索为何!)也就是说尺寸设计上只能正好装下这些东西,那么多出的部分怎么办,当然是隐藏喽,设置div的overflow:hidden. css部分设计完了那么jQuery部分怎么实现的呢,我们可以这样理解:
**当我们点击其中的一个li的时候,这个li以及li左边的部分全部按照绝对定位站到自己应该站的位置,而li右边的所有元素全部往右定位到自己在右边应该在的位置.** 其实每个li只有两个位置而已,所以我们通过这个来实现的时候就比较方便了,当然我们在这里还要使用循环啦,这样能更智能的更方便的写出代码. 废话不多说上代码!

#### 代码示例

同样的我们先定义HTML部分如下
```
<body>
<div id="accordion">
	<ul>
	<li class="bar01"><span>非洲景色01</span><img src="images/001.jpg" /></li>
    <li class="bar02"><span>非洲景色02</span><img src="images/002.jpg" /></li>
    <li class="bar03"><span>非洲景色03</span><img src="images/003.jpg" /></li>
    <li class="bar04"><span>非洲景色04</span><img src="images/004.jpg" /></li>
    <li class="bar05"><span>非洲景色05</span><img src="images/005.jpg" /></li>
	</ul>
</div>
</body>


```
然后是css部分
```

<style>
*{margin:0;padding:0;}
body{font-size:12px;}
/*这里的according的位置必须设置为relative或者absolute否则子元素无法正常显示*/
#accordion{width:727px; height:350px; margin:100px auto 0 auto; position:relative; overflow:hidden; border:1px solid #CCC;}
#accordion ul{list-style:none;}
/*这里我们使用了绝对定位*/
#accordion ul li{width:643px;height:350px; position:absolute; background:#FFF;}
#accordion ul li span{display:block;width:20px; height:350px; float:left; text-align:center; color:#FFF; padding-top:5px; cursor:pointer;}
/*这里图片的大小为 622*350 */
#accordion ul li img{display:block; float:right;}

.bar01{left:0px;}
.bar02{left:643px;}
.bar03{left:664px;}
.bar04{left:685px;}
.bar05{left:706px;}
.bar01 span{background:#09E0B5;}
.bar02 span{background:#3D7FBB;}
.bar03 span{background:#5CA716;}
.bar04 span{background:#F28B24;}
.bar05 span{background:#7C0070;}
</style>
```
最主要的js部分来了:
```
<script>
$(function(){
	var $li = $('#accordion li');
	// 首先我们让点击的li以及li左边的部分全部靠左归位
	$li.click(fucntion(){  // 这里是选中点击的li的位置归左

		$(this).animate({'left':$(this).index()*21}) //由于每个li的a标签大小为21所以我们让可以选中标签的索引乘以21就可以得到这个li应该在的位置.
		// 下面我们开始移动这个标签左边的所有标签,这里我们用到了preAll 这个功能,这是指在同级元素中选中元素的前面的所有元素

		$(this).preAll().each(function(){ // 这里我们使用了循环
			// 下面的this是指循环的每个pre的元素

			$(this).animate({'left':$(this).index()*21})

		})
				// 下面我们让点击元素的所有的右边的元素归到右边去
		$(this).nextAll().each(fucntion(){

			$(this).animate({'left':727-21*(5-$(this).index())})
		})
	})
})
</script>
```
当然这只是其中的一种思路:我想到的另外一种思路和上面类似:因为每个标签所对应的位置只有两个,可以使用addClass 和removeClass来移动每个li,这里就不试验了,你可以做下试试!

---

### 幻灯效果(最新)
幻灯片也是网页中常见的效果,它可以以轮播的方式展示图片内容,最基础的幻灯片的效果应该有: 自动播放,当点击左右箭头按钮的时候页面滑动,当鼠标放到图片上的时候图片播放停止,这就是幻灯片的几个基本的效果.如下图所示:

![](https://ws1.sinaimg.cn/large/b3c7bdb6ly1fhoygu48dsg20dw06bavq.gif)

#### 原理过程分析


#### 代码示例


---
